apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-vol
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.redis.storage.classname }}
  resources:
    requests:
      storage: 128Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - name: tcp
      port: 6379
      targetPort: tcp

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis
data:
  redis.conf: |-
    dir /data
    port 6379
    bind 0.0.0.0
    appendonly yes
    protected-mode yes
    requirepass {{ .Values.redis.password }}
    pidfile /data/redis-6379.pid

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  strategy: 
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-vol
          persistentVolumeClaim:
            claimName: redis-vol
        - name: redis
          configMap:
            name: redis
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          command: 
            - "redis-server"
            - "/etc/redis/redis.conf"
          imagePullPolicy: Always
          volumeMounts:
            - name: redis-vol
              mountPath: /data/
            - name: redis
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
          ports:
            - name: tcp
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 5
            timeoutSeconds: 5
            tcpSocket:
              port: 6379
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            tcpSocket:
              port: 6379
          env:
            - name: TZ
              value: "Asia/Shanghai"





